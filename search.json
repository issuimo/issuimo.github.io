[{"title":"Mono/il2cpp类型透视实现","date":"2023-08-28T06:30:54.000Z","url":"/2023/08/28/Mono-il2cpp%E7%B1%BB%E5%9E%8B%E9%80%8F%E8%A7%86%E5%AE%9E%E7%8E%B0/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["作弊","/tags/%E4%BD%9C%E5%BC%8A/"],["教程","/tags/%E6%95%99%E7%A8%8B/"],["Unity","/tags/Unity/"],["游戏透视","/tags/%E6%B8%B8%E6%88%8F%E9%80%8F%E8%A7%86/"],["外挂","/tags/%E5%A4%96%E6%8C%82/"]],"categories":[["教程","/categories/%E6%95%99%E7%A8%8B/"],["Unity逆向","/categories/%E6%95%99%E7%A8%8B/Unity%E9%80%86%E5%90%91/"]],"content":"传统透视靠找矩阵和人物坐标来实现, 但这种办法放在由 C#催生的 Unity 游戏中并不是最优解 Unity 游戏可以借助 Mono&#x2F;il2cpp dll导出函数利用反射实现获取游戏类和函数签名, 这种方法高效又方便 实现原理 Hook 继承了 Component&#x2F;Transform 类的实体类构造 (直接 Hook 这两个类的构造也行) 获取到实体指针后利用多态的特性调用 Component&#x2F;Transform 函数 获取主相机或当前相机实现一键转屏幕坐标后绘制 代码演示 Il2cpp: PhasmophobiaCheat Mono: ravenfield 使用 Unity 运行时反射库对于如何获取游戏内我们可以使用 Unity 运行时反射库来实时获取游戏数据信息 IL2CPP Resolver UnityHack UnityResolve.hpp 2023&#x2F;11&#x2F;12 UnityHack 目前已转为更加实用的 UnityResolve 借助以上库我们可以快速寻找函数地址进行 Hook 操作, 本文使用作者的 UnityHack 库和 Hook 继承了 Component&#x2F;Transform 类的类构造进行实践 初始化 Unity 运行时反射库使用以下代码实现库的初始化 你是什么类型的游戏就选择哪种初始化， 切记不能够混用 Hook 构造 通过 Hook 类的构造(初始化) 获取我们所需要的实体指针方便我们后面调用函数 获取相机 部分游戏可能要枚举相机进行获取 获取实体坐标 因为目标类继承了 Component 类, 所以这里使用多态的方法获取实体坐标 类似于: 世界坐标转屏幕坐标 使用 WorldToScreenPoint 返回后 vector3 中的 y 坐标可能相反可以使用窗口高度减去 y 坐标 vector3 中 z 坐标为距离, 当距离为负数时说明实体不在相机视野内 效果演示"},{"title":"内存页面Hook的实现","date":"2023-08-28T03:20:43.000Z","url":"/2023/08/28/%E5%86%85%E5%AD%98%E9%A1%B5%E9%9D%A2Hook%E7%9A%84%E5%AE%9E%E7%8E%B0/","tags":[["Hook","/tags/Hook/"],["反检测","/tags/%E5%8F%8D%E6%A3%80%E6%B5%8B/"]],"categories":[["教程","/categories/%E6%95%99%E7%A8%8B/"],["VEHHook","/categories/%E6%95%99%E7%A8%8B/VEHHook/"]],"content":"普通 jmp int3 Hook 已难以绕过现 CRC 校验的检测， 硬件断点又有数量限制, 破除限制又需要高超的技术力去实现 VTHook, 那么有没有一种简单方便的方法去实现一个无痕 Hook 呢? 没错, 他就是页面异常 Hook! 其实现方法和原理都非常简单, 但缺陷也很明显, 其速度极其缓慢, bug 极多！ 那么如何去实现一个页面异常 Hook 呢? 页面异常 Hook 的执行流程 接管 VEH 异常处理 设置目标函数页面属性为 PAGE_READONLY 被执行程序触发页面异常后 VEH 捕获异常 修改 EIP (RIP) 指向 Hook 跳转函数执行我们的操作 修改目标地址页面属性为原属性 调用原函数 再次修改目标函数页面属性为 PAGE_READONLY 代码实现 我们首先创建 4 个变量 这 4 给变量分别用于 读写锁 原属性 回调函数 异常处理句柄 接管 VEH 异常处理 添加 Hook 与取消 Hook 函数 对外公开函数 这样我们便实现了一个无痕的页面 Hook 效果 页面不能精确到某一个特定函数, 页面 Hook 通常会影响该页面的所有函数, 请谨慎使用 "},{"title":"Hello World","date":"2023-08-28T02:00:00.000Z","url":"/2023/08/28/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]